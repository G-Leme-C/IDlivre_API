// <auto-generated />
using System;
using IDlivreAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace IDlivreAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210424214726_UserDriverContainsUserClient")]
    partial class UserDriverContainsUserClient
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("IDlivreAPI.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserDriverId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserDriverId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("IDlivreAPI.Model.UserClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RG")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UsersClient");
                });

            modelBuilder.Entity("IDlivreAPI.Model.UserDriver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CO2ReducedPerKm")
                        .HasColumnType("text");

                    b.Property<string>("DriversLicense")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserClientId")
                        .HasColumnType("integer");

                    b.Property<string>("VehicleDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserClientId");

                    b.ToTable("UsersDrivers");
                });

            modelBuilder.Entity("IDlivreAPI.Model.User", b =>
                {
                    b.HasOne("IDlivreAPI.Model.UserDriver", "UserDriver")
                        .WithMany()
                        .HasForeignKey("UserDriverId");
                });

            modelBuilder.Entity("IDlivreAPI.Model.UserClient", b =>
                {
                    b.HasOne("IDlivreAPI.Model.User", "User")
                        .WithOne("UserClient")
                        .HasForeignKey("IDlivreAPI.Model.UserClient", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IDlivreAPI.Model.UserDriver", b =>
                {
                    b.HasOne("IDlivreAPI.Model.UserClient", "UserClient")
                        .WithMany()
                        .HasForeignKey("UserClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
